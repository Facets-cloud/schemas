{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "title": "Define Job Intents",
  "properties": {
    "kind": {
      "type": "string",
      "enum": [
        "facets.modules.common.application.job"
      ],
      "description": "Facets Module Type"
    },
    "apiVersion": {
      "type": "string",
      "enum": [
        "v2"
      ],
      "description": "API Version"
    },
    "disabled": {
      "type": "boolean",
      "description": "Is this application disabled by default? Will it be enabled per environment?"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "properties": {
        "release": {
          "type": "object",
          "description": "Release/Build related metadata of an application",
          "properties": {
            "strategy": {
              "type": "string",
              "enum": [
                "RollingUpdate",
                "ReCreate"
              ],
              "description": "Strategy to apply when releasing this application"
            },
            "build": {
              "type": "object",
              "properties": {
                "artifactory": {
                  "type": "string",
                  "description": "Name of the artifactory registered in Facets Control Plane"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the Artifact registered in Facets Control Plane"
                },
                "image": {
                  "type": "string",
                  "description": "Image URL for the docker image. (Note Facets CP should have access to this repository or it should be public)"
                }
              }
            }
          },
          "required": [
            "strategy"
          ]
        },
        "runtime": {
          "type": "object",
          "description": "Manage Runtime properties like command and sizing",
          "properties": {
            "command": {
              "type": "array",
              "description": "The Command to run this container. This is optional required only if there is no CMD specified in your docker",
              "items": [
                {
                  "type": "string",
                  "description": "Part of command"
                }
              ]
            },
            "serviceNames": {
              "description": "How will other applications discover this application. Note: the file name is a default service name and only use this if you need additional names for your service",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "healthCheck": {
              "type": "object",
              "description": "Health checks to determine health of an application. If only port is specified it will be a port check only",
              "properties": {
                "startupTime": {
                  "type": "integer",
                  "description": "Time taken by this application to start and be ready. The health check will start after this duration"
                },
                "timeout": {
                  "type": "integer",
                  "description": "Timeout duration if the end point does not respond"
                },
                "period": {
                  "type": "integer",
                  "description": "Interval in which the check has to be repeated"
                },
                "portName": {
                  "type": "string",
                  "description": "Name of the port on which healthcheck has to be done. Name as defined in ports section"
                },
                "livenessUrl": {
                  "type": "string"
                },
                "readinessUrl": {
                  "type": "string"
                }
              },
              "required": [
                "portName"
              ]
            },
            "autoscaling": {
              "type": "object",
              "description": "Does this application autoscale",
              "properties": {
                "min": {
                  "type": "integer",
                  "description": "Min replicas to run"
                },
                "max": {
                  "type": "integer",
                  "description": "Max replicas to run"
                },
                "cpuThreshold": {
                  "type": "string",
                  "description": "CPU threshold when to trigger autoscaling"
                }
              },
              "required": [
                "min",
                "max",
                "cpuThreshold"
              ]
            },
            "size": {
              "type": "object",
              "description": "Size of the application as described in sizing json",
              "properties": {
                "namespace": {
                  "type": "string",
                  "description": "Optional - If there are multiple name spaces for sizing"
                },
                "value": {
                  "type": "string",
                  "description": "Key mentioned in Sizing.json"
                }
              },
              "required": [
                "value"
              ]
            },
            "ports": {
              "type": "array",
              "description": "Ports this application is listening to",
              "items": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Unique name for this port"
                    },
                    "port": {
                      "type": "integer",
                      "description": "Port number"
                    }
                  },
                  "required": [
                    "name",
                    "port"
                  ]
                }
              ]
            }
          },
          "required": [
            "size"
          ]
        },
        "permission": {
          "type": "array",
          "description": "Manage Permissions to other resources",
          "items": [
            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Unique name to refer this permission"
                },
                "resourceType": {
                  "type": "string",
                  "description": "Which resourcetype/ intent type this permission is for. e.g. mysql/ s3"
                },
                "resourceName": {
                  "type": "string",
                  "description": "Which resource/ intent this permission is for. Name of the json without the extension"
                },
                "permission": {
                  "type": "string",
                  "description": "Canned ACLs"
                }
              },
              "required": [
                "resourceType",
                "resourceName",
                "permission"
              ]
            }
          ]
        },
        "env": {
          "type": "object",
          "description": "Manage Environment variables",
          "properties": {
            "StaticVariable": {
              "type": "object",
              "description": "Variable which has a static value. You can override this per environment",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "static"
                  ],
                  "description": "This is a Static variable"
                },
                "default": {
                  "type": "string",
                  "description": "Default value for this variable"
                }
              },
              "required": [
                "type",
                "default"
              ]
            },
            "DynamicVariable": {
              "type": "object",
              "description": "Variable which contains reference to other resources created by Facets",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "dynamic"
                  ],
                  "description": "This is a Dynamic variable"
                },
                "resourceType": {
                  "type": "string",
                  "description": "Which resourcetype/ intent type this attribute is of. e.g. mysql/ s3"
                },
                "resourceName": {
                  "type": "string",
                  "description": "Which resource/ intent this attribute is of. Name of the json without the extension"
                },
                "attribute": {
                  "type": "string",
                  "description": "Attribute of the resource. e.g. bucket_name"
                }
              },
              "required": [
                "type",
                "resourceType",
                "resourceName",
                "attribute"
              ]
            },
            "VariableForCredentials": {
              "type": "object",
              "description": "Variable which contains reference to credential of other resources created by Facets",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "credential"
                  ],
                  "description": "This is a Credential variable"
                },
                "permissionName": {
                  "type": "string",
                  "description": "Reference to the permission block"
                },
                "attribute": {
                  "type": "string",
                  "description": "Which credential part to wire. e.g. Username/ Password"
                }
              },
              "required": [
                "type",
                "permissionName",
                "attribute"
              ]
            }
          },
          "required": [
          ]
        }
      },
      "required": [
        "release",
        "runtime",
        "permission",
        "env"
      ]
    }
  },
  "required": [
    "kind",
    "apiVersion",
    "disabled",
    "spec"
  ]
}
